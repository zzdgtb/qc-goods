<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qcwoshou.goods.dao.ImGroupMapper" >
  <resultMap id="BaseResultMap" type="com.qcwoshou.goods.model.ImGroup" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="group_code" property="groupCode" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="owner_account" property="ownerAccount" jdbcType="VARCHAR" />
    <result column="owner_account_id" property="ownerAccountId" jdbcType="INTEGER" />
    <result column="is_need_auth" property="isNeedAuth" jdbcType="BIT" />
    <result column="auth_type" property="authType" jdbcType="SMALLINT" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, group_code, create_date, modify_date, name, owner_account, owner_account_id, 
    is_need_auth, auth_type, is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qcwoshou.goods.model.ImGroupExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from im_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from im_group
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from im_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qcwoshou.goods.model.ImGroupExample" >
    delete from im_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qcwoshou.goods.model.ImGroup" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into im_group (group_code, create_date, modify_date, 
      name, owner_account, owner_account_id, 
      is_need_auth, auth_type, is_delete
      )
    values (#{groupCode,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{name,jdbcType=VARCHAR}, #{ownerAccount,jdbcType=VARCHAR}, #{ownerAccountId,jdbcType=INTEGER}, 
      #{isNeedAuth,jdbcType=BIT}, #{authType,jdbcType=SMALLINT}, #{isDelete,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qcwoshou.goods.model.ImGroup" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into im_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="groupCode != null" >
        group_code,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="ownerAccount != null" >
        owner_account,
      </if>
      <if test="ownerAccountId != null" >
        owner_account_id,
      </if>
      <if test="isNeedAuth != null" >
        is_need_auth,
      </if>
      <if test="authType != null" >
        auth_type,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="groupCode != null" >
        #{groupCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="ownerAccount != null" >
        #{ownerAccount,jdbcType=VARCHAR},
      </if>
      <if test="ownerAccountId != null" >
        #{ownerAccountId,jdbcType=INTEGER},
      </if>
      <if test="isNeedAuth != null" >
        #{isNeedAuth,jdbcType=BIT},
      </if>
      <if test="authType != null" >
        #{authType,jdbcType=SMALLINT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qcwoshou.goods.model.ImGroupExample" resultType="java.lang.Integer" >
    select count(*) from im_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update im_group
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.groupCode != null" >
        group_code = #{record.groupCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null" >
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerAccount != null" >
        owner_account = #{record.ownerAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerAccountId != null" >
        owner_account_id = #{record.ownerAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.isNeedAuth != null" >
        is_need_auth = #{record.isNeedAuth,jdbcType=BIT},
      </if>
      <if test="record.authType != null" >
        auth_type = #{record.authType,jdbcType=SMALLINT},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update im_group
    set id = #{record.id,jdbcType=INTEGER},
      group_code = #{record.groupCode,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      name = #{record.name,jdbcType=VARCHAR},
      owner_account = #{record.ownerAccount,jdbcType=VARCHAR},
      owner_account_id = #{record.ownerAccountId,jdbcType=INTEGER},
      is_need_auth = #{record.isNeedAuth,jdbcType=BIT},
      auth_type = #{record.authType,jdbcType=SMALLINT},
      is_delete = #{record.isDelete,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qcwoshou.goods.model.ImGroup" >
    update im_group
    <set >
      <if test="groupCode != null" >
        group_code = #{groupCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="ownerAccount != null" >
        owner_account = #{ownerAccount,jdbcType=VARCHAR},
      </if>
      <if test="ownerAccountId != null" >
        owner_account_id = #{ownerAccountId,jdbcType=INTEGER},
      </if>
      <if test="isNeedAuth != null" >
        is_need_auth = #{isNeedAuth,jdbcType=BIT},
      </if>
      <if test="authType != null" >
        auth_type = #{authType,jdbcType=SMALLINT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qcwoshou.goods.model.ImGroup" >
    update im_group
    set group_code = #{groupCode,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      name = #{name,jdbcType=VARCHAR},
      owner_account = #{ownerAccount,jdbcType=VARCHAR},
      owner_account_id = #{ownerAccountId,jdbcType=INTEGER},
      is_need_auth = #{isNeedAuth,jdbcType=BIT},
      auth_type = #{authType,jdbcType=SMALLINT},
      is_delete = #{isDelete,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>