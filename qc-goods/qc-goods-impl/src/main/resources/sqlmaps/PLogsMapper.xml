<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qcwoshou.goods.dao.PLogsMapper" >
  <resultMap id="BaseResultMap" type="com.qcwoshou.goods.model.PLogs" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="logs_level" property="logsLevel" jdbcType="TINYINT" />
    <result column="system_source" property="systemSource" jdbcType="TINYINT" />
    <result column="elapsed_time" property="elapsedTime" jdbcType="VARCHAR" />
    <result column="operator_id" property="operatorId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.qcwoshou.goods.model.PLogsWithBLOBs" extends="BaseResultMap" >
    <result column="biz_process" property="bizProcess" jdbcType="LONGVARCHAR" />
    <result column="message_res" property="messageRes" jdbcType="LONGVARCHAR" />
    <result column="request" property="request" jdbcType="LONGVARCHAR" />
    <result column="response" property="response" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, createtime, logs_level, system_source, elapsed_time, operator_id
  </sql>
  <sql id="Blob_Column_List" >
    biz_process, message_res, request, response
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.qcwoshou.goods.model.PLogsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from p_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qcwoshou.goods.model.PLogsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from p_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from p_logs
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from p_logs
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.qcwoshou.goods.model.PLogsExample" >
    delete from p_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qcwoshou.goods.model.PLogsWithBLOBs" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into p_logs (createtime, logs_level, system_source, 
      elapsed_time, operator_id, biz_process, 
      message_res, request, response
      )
    values (#{createtime,jdbcType=TIMESTAMP}, #{logsLevel,jdbcType=TINYINT}, #{systemSource,jdbcType=TINYINT}, 
      #{elapsedTime,jdbcType=VARCHAR}, #{operatorId,jdbcType=VARCHAR}, #{bizProcess,jdbcType=LONGVARCHAR}, 
      #{messageRes,jdbcType=LONGVARCHAR}, #{request,jdbcType=LONGVARCHAR}, #{response,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qcwoshou.goods.model.PLogsWithBLOBs" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into p_logs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="logsLevel != null" >
        logs_level,
      </if>
      <if test="systemSource != null" >
        system_source,
      </if>
      <if test="elapsedTime != null" >
        elapsed_time,
      </if>
      <if test="operatorId != null" >
        operator_id,
      </if>
      <if test="bizProcess != null" >
        biz_process,
      </if>
      <if test="messageRes != null" >
        message_res,
      </if>
      <if test="request != null" >
        request,
      </if>
      <if test="response != null" >
        response,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="logsLevel != null" >
        #{logsLevel,jdbcType=TINYINT},
      </if>
      <if test="systemSource != null" >
        #{systemSource,jdbcType=TINYINT},
      </if>
      <if test="elapsedTime != null" >
        #{elapsedTime,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="bizProcess != null" >
        #{bizProcess,jdbcType=LONGVARCHAR},
      </if>
      <if test="messageRes != null" >
        #{messageRes,jdbcType=LONGVARCHAR},
      </if>
      <if test="request != null" >
        #{request,jdbcType=LONGVARCHAR},
      </if>
      <if test="response != null" >
        #{response,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qcwoshou.goods.model.PLogsExample" resultType="java.lang.Integer" >
    select count(*) from p_logs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update p_logs
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logsLevel != null" >
        logs_level = #{record.logsLevel,jdbcType=TINYINT},
      </if>
      <if test="record.systemSource != null" >
        system_source = #{record.systemSource,jdbcType=TINYINT},
      </if>
      <if test="record.elapsedTime != null" >
        elapsed_time = #{record.elapsedTime,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorId != null" >
        operator_id = #{record.operatorId,jdbcType=VARCHAR},
      </if>
      <if test="record.bizProcess != null" >
        biz_process = #{record.bizProcess,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.messageRes != null" >
        message_res = #{record.messageRes,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.request != null" >
        request = #{record.request,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.response != null" >
        response = #{record.response,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update p_logs
    set id = #{record.id,jdbcType=BIGINT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      logs_level = #{record.logsLevel,jdbcType=TINYINT},
      system_source = #{record.systemSource,jdbcType=TINYINT},
      elapsed_time = #{record.elapsedTime,jdbcType=VARCHAR},
      operator_id = #{record.operatorId,jdbcType=VARCHAR},
      biz_process = #{record.bizProcess,jdbcType=LONGVARCHAR},
      message_res = #{record.messageRes,jdbcType=LONGVARCHAR},
      request = #{record.request,jdbcType=LONGVARCHAR},
      response = #{record.response,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update p_logs
    set id = #{record.id,jdbcType=BIGINT},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      logs_level = #{record.logsLevel,jdbcType=TINYINT},
      system_source = #{record.systemSource,jdbcType=TINYINT},
      elapsed_time = #{record.elapsedTime,jdbcType=VARCHAR},
      operator_id = #{record.operatorId,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qcwoshou.goods.model.PLogsWithBLOBs" >
    update p_logs
    <set >
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="logsLevel != null" >
        logs_level = #{logsLevel,jdbcType=TINYINT},
      </if>
      <if test="systemSource != null" >
        system_source = #{systemSource,jdbcType=TINYINT},
      </if>
      <if test="elapsedTime != null" >
        elapsed_time = #{elapsedTime,jdbcType=VARCHAR},
      </if>
      <if test="operatorId != null" >
        operator_id = #{operatorId,jdbcType=VARCHAR},
      </if>
      <if test="bizProcess != null" >
        biz_process = #{bizProcess,jdbcType=LONGVARCHAR},
      </if>
      <if test="messageRes != null" >
        message_res = #{messageRes,jdbcType=LONGVARCHAR},
      </if>
      <if test="request != null" >
        request = #{request,jdbcType=LONGVARCHAR},
      </if>
      <if test="response != null" >
        response = #{response,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qcwoshou.goods.model.PLogsWithBLOBs" >
    update p_logs
    set createtime = #{createtime,jdbcType=TIMESTAMP},
      logs_level = #{logsLevel,jdbcType=TINYINT},
      system_source = #{systemSource,jdbcType=TINYINT},
      elapsed_time = #{elapsedTime,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=VARCHAR},
      biz_process = #{bizProcess,jdbcType=LONGVARCHAR},
      message_res = #{messageRes,jdbcType=LONGVARCHAR},
      request = #{request,jdbcType=LONGVARCHAR},
      response = #{response,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qcwoshou.goods.model.PLogs" >
    update p_logs
    set createtime = #{createtime,jdbcType=TIMESTAMP},
      logs_level = #{logsLevel,jdbcType=TINYINT},
      system_source = #{systemSource,jdbcType=TINYINT},
      elapsed_time = #{elapsedTime,jdbcType=VARCHAR},
      operator_id = #{operatorId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>